<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.operation.dao.IntegralMapper">

    <!-- 分页 -->
    <sql id="sqlFragment_pagination">
        <if test="numPerPage != null">
            limit #{numPerPage}
        </if>
        <if test="start != null">
            offset #{start}
        </if>
    </sql>

    <!-- 查询条件 -->
    <sql id="sqlFragment_searchCriteria">
        <if test="oredCriteria != null and oredCriteria.size != 0">
            <trim prefix="and(" suffix=")">
                <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="queryIntegralForList" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.operation.entity.Integral">
        SELECT
        t0.detailid, t0.userid, t0.operation_type as operationtype, t0.integralvalue, t0.user_integralvalue, t0.objectid, t0.createtime, t0.lastmodifytime, t0.income_type as incometype, t0.scoretype
        FROM
        t_e_user_integral_detail t0
        where 1=1
        <if test="userid != null">
            <if test="!userid.isEmpty()">
                AND t0.userid = #{userid}
            </if>
        </if>
        <if test="userids != null">
            and (1 = 0
            <foreach item="userid" collection="userids">
                <if test="!userid.isEmpty()">
                    or t0.userid = #{userid}
                </if>
            </foreach>)
        </if>
        <if test="scoretype != null and !scoretype.isEmpty()">
            and t0.scoretype=#{scoretype}
        </if>
        <if test="incometype != null">
            <if test="!incometype.isEmpty()">
                AND t0.income_type = #{incometype}
            </if>
        </if>
        <if test="begin_time != null">
            AND t0.createtime > #{begin_time}
        </if>
        <if test="end_time != null">
            AND #{end_time} > t0.createtime
        </if>
        ORDER BY t0.createtime DESC
        <include refid="sqlFragment_pagination"/>
    </select>

    <select id="countIntegralList" parameterType="java.util.Map" resultType="Integer">
        SELECT
          count(t0.*)
        FROM
        t_e_user_integral_detail t0
        where 1=1
        <if test="userid != null">
            <if test="!userid.isEmpty()">
                AND t0.userid = #{userid}
            </if>
        </if>
        <if test="userids != null">
            and (1 = 0
            <foreach item="userid" collection="userids">
                <if test="!userid.isEmpty()">
                    or t0.userid = #{userid}
                </if>
            </foreach>)
        </if>
        <if test="incometype != null">
            <if test="!incometype.isEmpty()">
                AND t0.income_type = #{incometype}
            </if>
        </if>
        <if test="scoretype != null and !scoretype.isEmpty()">
            and t0.scoretype=#{scoretype}
        </if>
        <if test="begin_time != null">
            AND t0.createtime > #{begin_time}
        </if>
        <if test="end_time != null">
            AND #{end_time} > t0.createtime
        </if>
    </select>

    <select id="getTotalScore">
        SELECT
          sum(t0.integralvalue)
        FROM
          t_e_user_integral_detail t0
        <if test="operationtype != null">
            <if test="!operationtype.isEmpty()">
                and t0.operation_type = #{operationtype}
            </if>
            <if test="operationtype.isEmpty()">
                and t0.operation_type != '1'
            </if>
        </if>
        <if test="incometype != null">
            <if test="!incometype.isEmpty()">
                AND t0.income_type = #{incometype}
            </if>
        </if>
    </select>

    <select id="getExportManList" resultType="com.tianwen.springcloud.microservice.operation.entity.ScoreExportMan">
        SELECT
            added-subed as totalscore, t0.userid
        FROM
            (
                SELECT
                    SUM (integralvalue) as added,
                    userid
                FROM
                    t_e_user_integral_detail
                WHERE
                    income_type = '0'
                GROUP BY
                    userid
            ) t0
        JOIN
            (
                SELECT
                    SUM (integralvalue) subed,
                    userid
                FROM
                    t_e_user_integral_detail
                WHERE
                    income_type = '1'
                GROUP BY
                    userid
            ) t1 on t0.userid = t1.userid
        ORDER BY totalscore DESC
        offset 0 limit 10
    </select>

    <select id="getTodayLoginTimes" parameterType="java.util.Map" resultType="Integer">
        select count(*) from t_e_user_integral_detail
        WHERE userid=#{userid}
        and createtime >= CURRENT_DATE
    </select>

    <select id="getUserContribution" parameterType="String" resultType="Integer">
        SELECT sum(integralvalue) from t_e_user_integral_detail
        where income_type = '0'
        and operation_type != '1'
        and userid=#{userid}
    </select>

    <select id="getTodayIntegralInfo" parameterType="java.util.Map" resultType="Integer">
        select sum(integralvalue) as integral from t_e_user_integral_detail
        where 1=1
        <if test="userids != null">
            and (1=0
            <foreach item="userid" collection="userids">
                <if test="!userid.isEmpty()">
                    or userid = #{userid}
                </if>
            </foreach>)
        </if>
        <if test="today != null">
          and createtime >= CURRENT_DATE
        </if>
        <if test="week != null">
            and createtime >= date_trunc('week', CURRENT_DATE)-INTERVAL '7 day'
            and date_trunc('week', CURRENT_DATE) > createtime
        </if>
        <if test="month != null">
            and createtime >= date_trunc('month', CURRENT_DATE)-INTERVAL '1 month'
            and date_trunc('month', CURRENT_DATE) > createtime
        </if>
        and scoretype != '6'
        GROUP BY income_type
        order by income_type ASC
    </select>

    <select id="getTodayBonusScore" parameterType="java.util.Map" resultType="Integer">
        select sum(integralvalue) from t_e_user_integral_detail
        where createtime >= CURRENT_DATE
        and operation_type = #{operationtype}
        and scoretype = '4'
        and userid = #{userid}
    </select>

    <sql id="sqlFragment_userids_filter">
        WHERE FALSE
        <if test="areainfo.getUserids() != null and !areainfo.getUserids().isEmpty()">
            OR (scoretype != '6'
                AND createtime >= CURRENT_DATE
                AND userid in
                <foreach collection="areainfo.getUserids()" item="userid" open="(" separator="," close=")">
                    #{userid}
                </foreach>
            )
        </if>
    </sql>

    <sql id="sqlFragment_stat_table">
        WITH
        <if test="areaInfos != null">
            <foreach collection="areaInfos" index="index" item="areainfo">
                score_info${index} AS (
                    select
                    #{areainfo.areaid} areaid,
                    #{areainfo.areaname} areaname,
                    SUM (CASE WHEN income_type = '0'
                    THEN integralvalue ELSE 0 END) bonus_point,
                    SUM (CASE WHEN income_type = '1'
                    THEN integralvalue ELSE 0 END) out_point
                    from t_e_user_integral_detail
                    <include refid="sqlFragment_userids_filter"/>
                ),
            </foreach>
        </if>
        total_stat AS (
        <if test="areaInfos != null">
            <foreach collection="areaInfos" index="index"  separator="union" item="areainfo">
                select * from score_info${index}
            </foreach>
        </if>
        )
    </sql>

    <select id="getStatistics" parameterType="java.util.Map" resultType="java.util.Map">
        <include refid="sqlFragment_stat_table"/>
        select * from total_stat
    </select>
</mapper>
