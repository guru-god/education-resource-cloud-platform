<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.operation.dao.OrderMapper">

    <!-- 分页 -->
    <sql id="sqlFragment_pagination">
        <if test="numPerPage != null">
            limit #{numPerPage}
        </if>
        <if test="start != null">
            offset #{start}
        </if>
    </sql>

    <!-- 查询条件 -->
    <sql id="sqlFragment_searchCriteria">
        <if test="oredCriteria != null and oredCriteria.size != 0">
            <trim prefix="and(" suffix=")">
                <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="getStatistics" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.operation.entity.Order">
        select userid,
        <if test="ispaid != null and !ispaid.isEmpty()">
            ispaid,
        </if>
        count(orderid) as count
        from t_e_order
        where 1 = 1
        <if test="begin_time != null">
            and createtime >= #{begin_time}
        </if>
        <if test="end_time != null">
            and #{end_time} >= createtime
        </if>
        group by userid
        <if test="ispaid != null and !ispaid.isEmpty()">
            , ispaid
        </if>
    </select>

    <select id="getList" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.operation.entity.Order">
        select t0.orderid, t0.orderamount, t0.integralprice, t0.ispaid, t0.paidtime, t0.userid from t_e_order t0
        join t_e_con_order_goods t1 on t0.orderid = t1.orderid
        where 1=1
        <if test="contentids != null">
            and (1 = 0
            <foreach item="contentid" collection="contentids">
                <if test="!contentid.isEmpty()">
                    or t1.contentid = #{contentid}
                </if>
            </foreach>)
        </if>
        <if test="searchkey != null">
            <if test="!searchkey.isEmpty()">
                or t0.orderid  ILIKE '%' || #{searchkey} || '%'
            </if>
        </if>
        <if test="begin_time != null">
            and t0.createtime >= #{begin_time}
        </if>
        <if test="end_time != null">
            and #{end_time} >= t0.createtime
        </if>
        <if test="userids != null">
            and (1 = 0
            <foreach item="userid" collection="userids">
                <if test="!userid.isEmpty()">
                    or t0.userid = #{userid}
                </if>
            </foreach>)
        </if>
        <if test="userid != null">
            <if test="!userid.isEmpty()">
                and t0.userid = #{userid}
            </if>
        </if>
        <if test="orderid != null">
            <if test="!orderid.isEmpty()">
                and t0.orderid ILIKE '%' || #{orderid}  || '%'
            </if>
        </if>
        <if test="ispaid != null">
            <if test="!ispaid.isEmpty()">
                and ispaid = #{ispaid}
            </if>
        </if>
        GROUP by t0.orderid, t0.orderamount, t0.integralprice, t0.ispaid, t0.paidtime, t0.userid
        order by t0.paidtime desc
        <include refid="sqlFragment_pagination"/>
    </select>
    <!--Author GOD, 2019-2-15-->
    <select id="getListCount" parameterType="java.util.Map"
            resultType="Integer">
        select count(tb.*) from (select t0.orderid from t_e_order t0
        join t_e_con_order_goods t1 on t0.orderid = t1.orderid
        where 1=1
        <if test="searchkey != null">
            <if test="!searchkey.isEmpty()">
                and t0.orderid ILIKE '%' || #{searchkey} || '%'
            </if>
        </if>
        <if test="begin_time != null">
            and t0.createtime >= #{begin_time}
        </if>
        <if test="end_time != null">
            and #{end_time} >= t0.createtime
        </if>
        <if test="userids != null">
            and (1 = 0
            <foreach item="uid" collection="userids">
                <if test="!uid.isEmpty()">
                    or t0.userid = #{uid}
                </if>
            </foreach>)
        </if>
        <if test="contentids != null">
            and (1 = 0
            <foreach item="contentid" collection="contentids">
                <if test="!contentid.isEmpty()">
                    or t1.contentid = #{contentid}
                </if>
            </foreach>)
        </if>
        <if test="userid != null">
            <if test="!userid.isEmpty()">
                and t0.userid = #{userid}
            </if>
        </if>
        <if test="orderid != null">
            <if test="!orderid.isEmpty()">
                and t0.orderid = #{orderid}
            </if>
        </if>
        <if test="ispaid != null">
            <if test="!ispaid.isEmpty()">
                and ispaid = #{ispaid}
            </if>
        </if>
        GROUP by t0.orderid
        ) tb
    </select>
    <!--Author GOD, 2019-2-15-->

    <select id="getContentidsByOrder" parameterType="java.util.Map" resultType="String">
        select t0.contentid from t_e_con_order_goods t0 where orderid = #{orderid}
    </select>

    <select id="getContentidsByUser" parameterType="java.util.Map" resultType="String">
        select t1.contentid from t_e_order t0
         left join t_e_con_order_goods t1 on t0.orderid = t1.orderid
        where t0.userid = #{userid}
        GROUP by t1.contentid
    </select>

    <select id="isGoodinOrder" parameterType="java.util.Map" resultType="String">
        select t0.orderid from t_e_con_order_goods t0 where orderid=#{orderid} AND contentid=#{contentid}
    </select>

    <select id="countOrderForUser" parameterType="java.util.Map" resultType="Integer">
        select count(*) from t_e_order where 1 = 1
        <if test="userid != null and !userid.isEmpty()">
            and userid=#{userid}
        </if>
        <if test="ispaid != null and !ispaid.isEmpty()">
            and ispaid = #{ispaid}
        </if>
        <if test="begin_time != null">
            and createtime >= #{begin_time}
        </if>
        <if test="end_time != null">
            and #{end_time} >= createtime
        </if>
        <if test="userids != null">
            and (1 = 0
            <foreach item="id" collection="userids">
                <if test="!id.isEmpty()">
                    or userid = #{id}</if>
            </foreach>)
        </if>
    </select>

    <sql id="sqlFragment_stat_table">
        WITH
        order_table AS (
            select * from t_e_order
            where ispaid = '1'
        ),
        <if test="areaInfos != null">
            <foreach collection="areaInfos" index="index" item="areainfo">
                order_info${index} AS (
                select
                #{areainfo.areaid} areaid,
                #{areainfo.areaname} areaname,
                SUM(CASE WHEN TRUE
                THEN 1 ELSE 0 END) total,
                SUM(CASE WHEN createtime >= CURRENT_DATE
                THEN 1 ELSE 0 END) today,
                SUM(
                CASE WHEN
                (createtime >= date_trunc('week', CURRENT_DATE)-INTERVAL '7 day'
                and date_trunc('week', CURRENT_DATE) > createtime)
                THEN 1 ELSE 0 END
                ) lastweek,
                SUM(CASE WHEN
                createtime >= date_trunc('month', CURRENT_DATE)-INTERVAL '1 month'
                and date_trunc('month', CURRENT_DATE) > createtime
                THEN 1 ELSE 0 END) lastmonth
                from order_table
                <include refid="sqlFragment_userids_filter"/>
                ),
            </foreach>
        </if>
        total_stat AS (
        <if test="areaInfos != null">
            <foreach collection="areaInfos" index="index"  separator="union" item="areainfo">
                select * from order_info${index}
            </foreach>
        </if>
        )
    </sql>

    <sql id="sqlFragment_userids_filter">
        where false
        <if test="areainfo.getUserids() != null and !areainfo.getUserids().isEmpty()">
            OR userid in
            <foreach collection="areainfo.getUserids()" item="userid" open="(" separator="," close=")">
                #{userid}
            </foreach>
        </if>
    </sql>

    <select id="getOrderStatistics" parameterType="java.util.Map" resultType="java.util.Map">
        <include refid="sqlFragment_stat_table"/>
        select * from total_stat
    </select>

    <select id="getAllOrders" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.operation.entity.Order">
        select * from t_e_order where ispaid = #{ispaid}
    </select>

    <select id="getAllCreators"  resultType="String">
        select userid from t_e_order
         group by userid
    </select>

    <insert id="connectOrderid2Contentid" parameterType="java.util.Map">
        insert into t_e_con_order_goods VALUES (#{orderid}, #{contentid})
    </insert>

    <select id="getOrderNum" resultType="Integer">
        select count(*) from (select t0.*
        from t_e_order t0
        where 1 = 1 and ispaid = '1') tbl
    </select>

    <select id="getOrderByContentid" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.operation.entity.Order">
        select t0.* from t_e_order t0
        left join t_e_con_order_goods t1 on t0.orderid = t1.orderid
        where 1=1
        <if test="contentid != null">
            <if test="!contentid.isEmpty()">
                and t1.contentid = #{contentid}
            </if>
        </if>
        <if test="userid != null">
            <if test="!userid.isEmpty()">
                and t0.userid = #{userid}
            </if>
        </if>
    </select>

    <select id="getContentids4User" parameterType="java.util.Map" resultType="String">
        SELECT t0.contentid
        from t_e_con_order_goods t0
        left join t_e_order t1 on t0.orderid = t1.orderid
        WHERE t1.userid = #{userid}
        <if test="ispaid != null">
            <if test="!ispaid.isEmpty()">
                and t1.ispaid = #{ispaid}
            </if>
        </if>
        GROUP  by contentid
    </select>

    <select id="queryOrderForList" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.operation.entity.Order">
        SELECT  t0.*   FROM  t_e_order t0
        where 1 = 1
        <if test="userids != null">
            and (1 = 0
            <foreach item="userid" collection="userids">
                or userid = #{userid}
            </foreach>)
        </if>
        <if test="userid != null">
            <if test="!userid.isEmpty()">
                and userid = #{userid}
            </if>
        </if>
        <if test="begin_time != null">
            and createtime >= #{begin_time}
        </if>
        <if test="end_time != null">
            and #{end_time} >= createtime
        </if>
        <if test="ispaid != null">
            <if test="!ispaid.isEmpty()">
                and ispaid = #{ispaid}
            </if>
        </if>
    </select>

    <select id="selectCountForUser" parameterType="java.util.Map" resultType="Integer">
        select count(*) from t_e_order t0
        join t_e_con_order_goods t1 on t0.orderid = t1.orderid
        where
          TRUE
          <if test="userid != null and !userid.isEmpty()">
              and t0.userid = #{userid}
          </if>
          <if test="contentid != null and !contentid.isEmpty()">
              and t1.contentid = #{contentid}
          </if>
    </select>

</mapper>
