<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianwen.springcloud.microservice.bussinessassist.dao.AuditMapper">

    <!-- 分页 -->
    <sql id="sqlFragment_pagination">
        <if test="numPerPage != null">
            limit #{numPerPage}
        </if>
        <if test="start != null">
            offset #{start}
        </if>
    </sql>

    <!-- 查询条件 -->
    <sql id="sqlFragment_searchCriteria">
        <if test="oredCriteria != null and oredCriteria.size != 0">
            <trim prefix="and(" suffix=")">
                <foreach collection="oredCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>

    <sql id="conditions">
        <if test="objectids != null">
            and (1 = 0
            <foreach item="objectid" collection="objectids">
                or t0.objectid = #{objectid}
            </foreach>)
        </if>
        <if test="searchkey != null and !searchkey.isEmpty()">
            and ( 1 = 0
            <if test="searchaudituser != null">
                <foreach collection="searchaudituser" item="user">
                    or t0.audituser = #{user}
                </foreach>
            </if>
            <if test="searchcontentid != null">
                <foreach collection="searchcontentid" item="contentid">
                    or t0.objectid = #{contentid}
                </foreach>
            </if>)
        </if>
        <if test="audituser != null">
            and (1 = 0
            <foreach collection="audituser" item="user">
                or t0.audituser = #{user}
            </foreach>)
        </if>
        <if test="userid != null">
            <if test="!userid.isEmpty()">
                and t0.audituser = #{userid}
            </if>
        </if>
        <if test="result != null">
            <if test="!result.isEmpty()">
                and t0.result = #{result}
            </if>
        </if>
        <if test="audittype != null">
            <if test="!audittype.isEmpty()">
                and t0.audit = #{audittype}
            </if>
        </if>
        <if test="begin_time != null">
            AND t0.audittime >= #{begin_time}
        </if>
        <if test="end_time != null">
            AND #{end_time} >= t0.audittime
        </if>
    </sql>

    <select id="countAuditForList" parameterType="java.util.Map"
            resultType="Long">
        SELECT count(t0.*) FROM t_e_audit t0
        WHERE 1=1
        <include refid="conditions"/>
    </select>

    <select id="queryAuditForList" parameterType="java.util.Map"
            resultType="com.tianwen.springcloud.microservice.bussinessassist.entity.Audit">
        SELECT t0.* FROM t_e_audit t0
        WHERE 1=1
        <include refid="conditions"/>
        <if test="audittimeASC != null">
            ORDER BY t0.audittime ASC
        </if>
        <if test="audittimeDESC != null">
            ORDER BY t0.audittime DESC
        </if>
        <if test="resultASC != null">
            ORDER BY t0.result ASC
        </if>
        <if test="resultDESC != null">
            ORDER BY t0.result DESC
        </if>
        <if test="getalldata == null">
            <include refid="sqlFragment_pagination"/>
        </if>
    </select>

    <select id="countAudit" resultType="java.lang.Long">
        select count(*) from t_e_audit
    </select>

    <select id="getAuditInfoByResourceId" parameterType="String" resultType="com.tianwen.springcloud.microservice.bussinessassist.entity.Audit">
        select * from t_e_audit where objectid=#{contentid} order by audittime desc offset 0 limit 1
    </select>

    <insert id="allowAudit" parameterType="java.util.Map">
          insert into t_e_audit(auditid, objectid, objecttype, result, audituser, remark, audittime, audittype)
          values((SELECT pg_nextval('seq_auditid_t_e_audit')), #{contentid},
          '1', '1', #{auditor}, #{remark}, CURRENT_TIMESTAMP, #{audittype})
    </insert>

    <insert id="denyAudit" parameterType="java.util.Map">
            insert into t_e_audit(auditid, objectid, objecttype, result, audituser, remark, audittime, audittype)
            values((SELECT pg_nextval('seq_auditid_t_e_audit')), #{contentid},
            '1', '0', #{auditor}, #{remark}, CURRENT_TIMESTAMP, #{audittype})
    </insert>

    <select id="getAuditorList" resultType="String">
        select DISTINCT audituser from t_e_audit
    </select>
</mapper>
